exports.id=0,exports.modules={"./src/server/server.js":function(e,t,s){"use strict";s.r(t);var r=s("../build/contracts/FlightSuretyApp.json"),a=s("../build/contracts/FlightSuretyData.json"),o=s("./src/server/config.json"),n=s("web3"),c=s.n(n),l=s("express"),i=s.n(l);let d=o.localhost,u=new c.a(new c.a.providers.WebsocketProvider(d.url.replace("http","ws"))),g=new u.eth.Contract(r.abi,d.appAddress),h=new u.eth.Contract(a.abi,d.dataAddress);const p=[];(async()=>{const e=await u.eth.getAccounts(),t=e.slice(e.length/2);u.eth.defaultAccount=e[0];const{amIAuthorized:s,registerOracle:r,getMyIndexes:a,REGISTRATION_FEE:o}=g.methods,{authorizeContract:n}=h.methods,c=await s().call({from:e[0]});await u.eth.net.getId();c||(console.log("App contract is not authorized. Calling authorize contract"),await n(d.appAddress).send({from:e[0]}));const l=await o().call();t.forEach(async e=>{await r().send({from:e,value:l,gas:3e6})})})(),g.events.OracleRegistered({fromBlock:0},(function(e,t){if(e&&console.log(e),console.log(t),t.returnValues&&t.returnValues.oracle&&t.returnValues.indexes){const e=p.findIndex(e=>e.address===t.returnValues.oracle);e>-1?p[e].indexes=t.returnValues.indexes:p.push({address:t.returnValues.oracle,indexes:t.returnValues.indexes})}})),g.events.OracleRequest({fromBlock:0},(function(e,t){e&&console.log(e),console.log(t)}));const f=i()();f.get("/api",(e,t)=>{t.send({message:"An API for use with your Dapp!"})}),f.get("/api/oracles",(e,t)=>{t.send({message:"List of oracles retrieved successfully",data:p,meta:{total:p.length}})}),t.default=f}};