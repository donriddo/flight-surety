exports.id=0,exports.modules={"./src/server/server.js":function(e,t,s){"use strict";s.r(t);var r=s("../build/contracts/FlightSuretyApp.json"),a=s("../build/contracts/FlightSuretyData.json"),n=s("./src/server/config.json"),o=s("web3"),l=s.n(o),u=s("express"),c=s.n(u);let i=n.localhost,d=new l.a(new l.a.providers.WebsocketProvider(i.url.replace("http","ws"))),g=new d.eth.Contract(r.abi,i.appAddress),h=new d.eth.Contract(a.abi,i.dataAddress);const{amIAuthorized:f,registerOracle:p,submitOracleResponse:m,REGISTRATION_FEE:V}=g.methods,{authorizeContract:w}=h.methods,x=[],y=[0,10,20,30,40,50];(async()=>{const e=await d.eth.getAccounts();console.log(e);const t=e.slice(e.length/2);d.eth.defaultAccount=e[0];const s=await f().call({from:e[0]});await d.eth.net.getId();s||(console.log("App contract is not authorized. Calling authorize contract"),await w(i.appAddress).send({from:e[0]}));const r=await V().call();t.forEach(async e=>{await p().send({from:e,value:r,gas:3e6})})})(),g.events.OracleRegistered({fromBlock:0},(function(e,t){if(e&&console.log(e),console.log(t),t.returnValues&&t.returnValues.oracle&&t.returnValues.indexes){const e=x.findIndex(e=>e.address===t.returnValues.oracle);e>-1?x[e].indexes=t.returnValues.indexes:x.push({address:t.returnValues.oracle,indexes:t.returnValues.indexes})}})),g.events.OracleRequest({fromBlock:0},(function(e,t){if(e&&console.log(e),console.log(t),t.returnValues&&t.returnValues.flightKey&&t.returnValues.index&&t.returnValues.airline&&t.returnValues.timestamp){x.filter(e=>e.indexes.includes(t.returnValues.index)).forEach(async e=>{try{const s=y[Math.floor(Math.random()*y.length)];console.log("Flight response to contract",t.returnValues.index,t.returnValues.airline,t.returnValues.flightKey,t.returnValues.timestamp,s),await m(t.returnValues.index,t.returnValues.airline,t.returnValues.flightKey,t.returnValues.timestamp,s).send({from:e.address,gas:3e6})}catch(e){console.log(`Error submitting response to contract: ${e}`)}})}}));const A=c()();A.get("/api",(e,t)=>{t.send({message:"An API for use with your Dapp!"})}),A.get("/api/oracles",(e,t)=>{t.send({message:"List of oracles retrieved successfully",data:x,meta:{total:x.length}})}),t.default=A}};