exports.id=0,exports.modules={"./src/server/server.js":function(e,t,s){"use strict";s.r(t);var o=s("../build/contracts/FlightSuretyApp.json"),r=s("../build/contracts/FlightSuretyData.json"),a=s("./src/server/config.json"),n=s("web3"),c=s.n(n),l=s("express"),i=s.n(l);let u=a.localhost,d=new c.a(new c.a.providers.WebsocketProvider(u.url.replace("http","ws"))),g=new d.eth.Contract(o.abi,u.appAddress),h=new d.eth.Contract(r.abi,u.dataAddress);const f=[];(async()=>{const e=await d.eth.getAccounts(),t=e.slice(e.length/2);d.eth.defaultAccount=e[0];const{amIAuthorized:s,registerOracle:o,getMyIndexes:r,REGISTRATION_FEE:a}=g.methods,{authorizeContract:n}=h.methods,c=await s().call({from:e[0]});await d.eth.net.getId();c||(console.log("App contract is not authorized. Calling authorize contract"),await n(u.appAddress).send({from:e[0]}));const l=await a().call();t.forEach(async e=>{await o().send({from:e,value:l,gas:3e6})})})(),g.events.OracleRegistered({fromBlock:0},(function(e,t){if(e&&console.log(e),console.log(t),t.returnValues&&t.returnValues.oracle&&t.returnValues.indexes){const e=f.findIndex(e=>e.address===t.returnValues.oracle);e>-1?f[e].indexes=t.returnValues.indexes:f.push({address:t.returnValues.oracle,indexes:t.returnValues.indexes})}})),g.events.OracleRequest({fromBlock:0},(function(e,t){e&&console.log(e),console.log(t)})),g.events.OracleSomething({fromBlock:0},(function(e,t){e&&console.log(e),console.log({something:t})}));const p=i()();p.get("/api",(e,t)=>{t.send({message:"An API for use with your Dapp!"})}),p.get("/api/oracles",(e,t)=>{t.send({message:"List of oracles retrieved successfully",data:f,meta:{total:f.length}})}),t.default=p}};